#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <cmath>
#include <climits>
#include <algorithm>
#include <iomanip>

using namespace std;
using ll = long long;

#define rep(i, m, n) for (int i = (m); i < (n); i++)

int main()
{
    int n, u, v, w;
    cin >> n;
    vector<vector<int>> g(n, vector<int>(n - 1));
    vector<int> color(n, -1);
    rep(i, 0, n - 1)
    {
        cin >> u >> v;
        cin >> w;
        g[u - 1][v - 1] = w;
        g[v - 1][u - 1] = w;
    }

    auto dfs = [&](auto dfs, int i, int c = 0) -> bool
    {
        color[i] = c;
        rep(j, 0, n)
        {
            if (g[i][j] != 0)
            {
                if (g[i][j] % 2 == 0)
                {
                    dfs(dfs, j, c);
                }
                else
                {
                    dfs(dfs, j, c^1);
                }
            }
        }

    }

    dfs(dfs, 0)

    rep(i, 0, n)
    {
        cout << color[i] << endl;;
    }
}